import {Card} from "@/components/Card";
import Head from "next/head";
import {useRouter} from "next/router";

import {Character} from "@/pages";
import {GetStaticPaths, GetStaticProps} from "next";

export default function Product({data: item}: {data: Character}) {
	// const [items, setItems] = useState([])

	const router = useRouter();

	// useEffect(() => {
	// 	fetch(`https://amiiboapi.com/api/amiibo/?name=${router.query.id}`)
	// 		.then((res) => res.json())
	// 		.then((data) => setItems(data.amiibo));
	// }, []);

	return (
		<>
			<Head>
				<title>Product</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div>
				<h1>Product</h1>
				<Card item={item} />
			</div>
		</>
	);
}

// You should use getStaticPaths if you’re statically pre-rendering pages that use dynamic routes
export const getStaticPaths: GetStaticPaths = async (ctx) => {
	const data = await fetch("https://amiiboapi.com/api/amiibo/")
		.then((res) => res.json())
		.then((data) => data.amiibo.slice(0, 50));

	return {
		paths: data.map((item: Character) => ({params: {id: item.tail}})),
		fallback: false,
	};
};

// You should use getStaticProps when:
//- The data required to render the page is available at build time ahead of a user’s request.
//- The data comes from a headless CMS.
//- The data can be publicly cached (not user-specific).
//- The page must be pre-rendered (for SEO) and be very fast — getStaticProps generates HTML and JSON files, both of which can be cached by a CDN for performance.

export const getStaticProps: GetStaticProps = async ({params}) => {
	// Realizar una peticion a la API con el id que viene en ctx.params.id

	const {id} = params as {id: string};

	const res = await fetch(`https://amiiboapi.com/api/amiibo/?tail=${id}`);
	const data = await res.json();

	console.log(data);

	return {
		props: {
			data: data.amiibo[0],
		},
	};
};
